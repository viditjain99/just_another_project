#Assembler project
#Vidit Jain 2017370
#Sankalp Agrawal 2017363

We have designed an assembler which will take an assembly code as input, and will output the machine code, in a seperate text file.

We have assumed this format for the assembly language program.
Label/symbol    Opcode    Operands	Comments

Also, each section will be seperated by tabspace(\t). 
If not, our code will generate runtime errors.

We have generated the Symbol table, Literal Table, Opcode table and some errors.

---OUTPUT---
Format of Symbol Table--
Symbol name    Label/Operand   Memory address(in decimal system)    value of symbol
(Each section is tabspace(\t) seperated.)

Format of Literal Table--
Literal    Memory address(in decimal system)
(Each section is tabspace(\t) seperated.)

Format of Opcode Table--
Opcode name       Opcode binary address   Location Counter    Operand    Operand type 
(Each section is tabspace(\t) seperated.)
(For increasing the location counter, we have increased the length by number of words in the instruction.)

Machine Code is generated in binary form.

We have handled these errors- 
1) When an opcode is not given
2) Opcode is invalid (opcode is not present in the given set of opcodes)
3) An opcode is used as a symbol
4) A symbol is defined more than once
5) Opcode is supplied with too many operands
6) Opcode is supplied with less number of operands than required
7) STP statement not used
8) When a symbol used has not been defined


To run the code, the input file must be named as 'inputAssemblyCode.txt'.
